#include <iostream>
#include <vector>
using namespace std;

int n,m;
int S,T;

vector<int> v[100001];
vector<int> v_res[100001];

int visit1[100001]; // s->t 
int visit2[100001]; // t->s
int visit3[100001]; // x->s
int visit4[100001]; // x->t

void dfs(int startnode, vector<int> g[], int visit[]){
    visit[startnode]=1;

    for(int target : g[startnode]){
        if(visit[target]){
            continue;
        }
        else{
            dfs(target, g, visit);
        }
    }
}

int main(){
    cin>>n>>m;
    for(int i=0; i<m; i++){
        int a,b;
        cin>>a>>b;
        v[a].push_back(b);
        v_res[b].push_back(a);
    }

    cin>>S>>T;

    visit1[T] = 1;
    visit2[S] = 1;
    dfs(S,v,visit1);
    dfs(T,v,visit2);
    dfs(S,v_res,visit3);
    dfs(T,v_res,visit4);

    int ans=0;
    for(int i=1; i<=n; i++){
        if(visit1[i] && visit2[i] && visit3[i] && visit4[i]){
            ans++;
        }
    }
    cout<<ans-2;
    return 0;
}
